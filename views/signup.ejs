<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
		<meta http-equiv="x-ua-compatible" content="ie=edge" />
		<title><%= title %></title>
		<link rel="shortcut icon" href="/images/favicon.ico" />
		<!-- Material Design CDN -->
		<link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900&display=swap" rel="stylesheet" />
		<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons" />
		<link href="https://unpkg.com/material-components-web@latest/dist/material-components-web.min.css" rel="stylesheet" />
		<script src="https://unpkg.com/material-components-web@latest/dist/material-components-web.min.js"></script>

		<!-- Load our own stylesheet after Material Design to overwrite certain styles -->
		<link href="/stylesheets/css/index.css" rel="stylesheet" type="text/css" />
	</head>
	<body>
		<div class="container">
			<div class="card mdc-elevation--z4">
				<div class="page-hints">
					<h2 class="mdc-typography--headline5"><%= title %></h2>
					<p class="mdc-typography--subtitle1"><%= pageHint %></p>
				</div>

				<form class="signup-form" autocomplete="off" action="/idp/interaction/<%= uid %>/signup" method="post">
					<% if (flash) { %>
					<div class="form-error signup-error mdc-elevation--z4 mdc-ripple-surface" data-mdc-auto-init="MDCRipple">
						<i class="material-icons mdc-icon-button__icon">error</i>
						<p><%= flash %></p>
					</div>
					<% } %>

					<div class="signup-text-inputs">
						<div class="mdc-text-field mdc-text-field--outlined mdc-theme--primary" data-mdc-auto-init="MDCTextField">
							<input required minlength="1" name="given_name" type="text" class="mdc-text-field__input" autofocus="on" />
							<div class="mdc-notched-outline">
								<div class="mdc-notched-outline__leading"></div>
								<div class="mdc-notched-outline__notch">
									<label for="tf-outlined" class="mdc-floating-label">First Name</label>
								</div>
								<div class="mdc-notched-outline__trailing"></div>
							</div>
						</div>

						<div class="mdc-text-field mdc-text-field--outlined mdc-theme--primary" data-mdc-auto-init="MDCTextField">
							<input required minlength="1" name="family_name" type="text" class="mdc-text-field__input" />
							<div class="mdc-notched-outline">
								<div class="mdc-notched-outline__leading"></div>
								<div class="mdc-notched-outline__notch">
									<label for="tf-outlined" class="mdc-floating-label">Last Name</label>
								</div>
								<div class="mdc-notched-outline__trailing"></div>
							</div>
						</div>

						<div class="mdc-text-field mdc-text-field--outlined mdc-theme--primary" data-mdc-auto-init="MDCTextField">
							<input
								required
								minlength="1"
								name="email"
								type="email"
								class="mdc-text-field__input"
								autocomplete="username"
							/>
							<div class="mdc-notched-outline">
								<div class="mdc-notched-outline__leading"></div>
								<div class="mdc-notched-outline__notch">
									<label for="tf-outlined" class="mdc-floating-label">Email</label>
								</div>
								<div class="mdc-notched-outline__trailing"></div>
							</div>
						</div>

						<div
							class="mdc-text-field mdc-text-field--outlined mdc-theme--primary mdc-text-field--with-trailing-icon"
							data-mdc-auto-init="MDCTextField"
						>
							<input
								required
								minlength="6"
								name="password"
								type="password"
								class="mdc-text-field__input"
								autocomplete="current-password"
							/>
							<button
								type="button"
								aria-hidden="true"
								id="show-password"
								aria-pressed="false"
								class="mdc-icon-button"
								aria-label="Show Password"
								data-mdc-auto-init="MDCIconButtonToggle"
							>
								<i class="material-icons mdc-icon-button__icon">visibility_off</i>
								<i class="material-icons mdc-icon-button__icon mdc-icon-button__icon--on">visibility</i>
							</button>
							<div class="mdc-notched-outline">
								<div class="mdc-notched-outline__leading"></div>
								<div class="mdc-notched-outline__notch">
									<label for="tf-outlined" class="mdc-floating-label">Password</label>
								</div>
								<div class="mdc-notched-outline__trailing"></div>
							</div>
						</div>
					</div>

					<div class="signup-buttons">
						<button
							type="submit"
							value="1"
							name="cancel_signup"
							class="mdc-button altSubmit"
							data-mdc-auto-init="MDCRipple"
						>
							<span class="mdc-button__ripple"></span>
							Sign-in instead
						</button>

						<button type="submit" class="mdc-button mdc-button--raised" data-mdc-auto-init="MDCRipple">
							<span class="mdc-button__ripple"></span>
							Sign-up
						</button>
					</div>
				</form>

				<div class="login-help">
					<!-- <a href="/interaction/<%= uid %>/abort">[ Cancel ]</a> -->
					<% if (client.tosUri) { %>
					<a href="<%= client.tosUri %>">[ Terms of Service ]</a>
					<% } %> <% if (client.policyUri) { %>
					<a href="<%= client.policyUri %>">[ Privacy Policy ]</a>
					<% } %>
				</div>
			</div>
		</div>

		<script text="text/javascript">
			window.addEventListener('DOMContentLoaded', (event) => {
				window.mdc.autoInit();

				const state = {
					showPassword: true,
					errorVisible: true,
				};

				const clickShowPassword = (e) => {
					if (state.showPassword) document.querySelector('input[name="password"]').type = 'text';
					else document.querySelector('input[name="password"]').type = 'password';

					state.showPassword = !state.showPassword;
				};

				const showPasswordButton = document.querySelector('#show-password');
				showPasswordButton.addEventListener('click', clickShowPassword);

				const hideErrorButton = document.querySelector('.form-error');

				if (hideErrorButton) {
					const clickHideError = (e) => {
						if (!state.errorVisible) return false;
						hideErrorButton.className += ' error-hide';
						state.errorVisible = !state.errorVisible;
					};
					hideErrorButton.addEventListener('click', clickHideError);
				}
				// Prevent Submit onEnter
				// Make sure this code gets executed after the DOM is loaded.
				const form = document.querySelector('.signup-form');
				const altSubmitButton = document.querySelector('.altSubmit');

				if (form && altSubmitButton) {
					form.addEventListener('keydown', (event) => {
						if (event.key === 'Enter') altSubmitButton.value = '';
					});
					altSubmitButton.addEventListener('click', (event) => {
						form.setAttribute('novalidate', true);
					});
				}
			});
		</script>
	</body>
</html>
